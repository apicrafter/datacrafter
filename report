************* Module datacrafter
datacrafter\__init__.py:9:0: C0305: Trailing newlines (trailing-newlines)
************* Module datacrafter.constants
datacrafter\constants.py:8:0: C0301: Line too long (110/100) (line-too-long)
datacrafter\constants.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module datacrafter.core
datacrafter\core.py:24:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:39:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:51:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:63:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:75:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:89:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:101:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:113:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:125:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:148:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:160:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\core.py:169:0: C0301: Line too long (114/100) (line-too-long)
datacrafter\core.py:173:0: C0305: Trailing newlines (trailing-newlines)
datacrafter\core.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\core.py:13:0: C0103: Function name "enableVerbose" doesn't conform to snake_case naming style (invalid-name)
datacrafter\core.py:13:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:20:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:31:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:35:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:44:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:47:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:56:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:59:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:68:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:71:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:82:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:85:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:90:0: C0103: Function name "ui" doesn't conform to snake_case naming style (invalid-name)
datacrafter\core.py:94:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:97:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:106:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:109:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:118:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:121:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:130:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:133:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:139:4: C0415: Import outside toplevel (datacrafter.__version__) (import-outside-toplevel)
datacrafter\core.py:140:10: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\core.py:144:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:153:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:156:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\core.py:165:4: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\core.py:4:0: C0411: standard import "import logging" should be placed before "import click" (wrong-import-order)
************* Module datacrafter.__main__
datacrafter\__main__.py:8:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\__main__.py:10:8: C0415: Import outside toplevel (core.cli) (import-outside-toplevel)
datacrafter\__main__.py:11:8: W0612: Unused variable 'exit_status' (unused-variable)
************* Module datacrafter.cmds.project
datacrafter\cmds\project.py:48:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\cmds\project.py:99:0: C0301: Line too long (113/100) (line-too-long)
datacrafter\cmds\project.py:129:0: C0301: Line too long (116/100) (line-too-long)
datacrafter\cmds\project.py:154:0: C0301: Line too long (115/100) (line-too-long)
datacrafter\cmds\project.py:182:0: C0305: Trailing newlines (trailing-newlines)
datacrafter\cmds\project.py:169:45: W0511: FIXME (fixme)
datacrafter\cmds\project.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\cmds\project.py:18:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\cmds\project.py:19:4: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:19:8: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\cmds\project.py:24:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\cmds\project.py:24:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
datacrafter\cmds\project.py:48:8: C0103: Variable name "logFormatter" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:49:8: C0103: Variable name "rootLogger" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:51:8: C0103: Variable name "fileHandler" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:51:42: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:56:8: C0103: Variable name "consoleHandler" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:60:34: W0613: Unused argument 'filename' (unused-argument)
datacrafter\cmds\project.py:83:19: W0703: Catching too general exception Exception (broad-except)
datacrafter\cmds\project.py:83:12: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:84:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:84:29: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:85:16: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\cmds\project.py:83:12: W0612: Unused variable 'e' (unused-variable)
datacrafter\cmds\project.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\cmds\project.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\cmds\project.py:93:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:93:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:97:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:97:26: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:100:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:100:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:102:16: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:103:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:103:30: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:108:16: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:109:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:109:30: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:111:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\cmds\project.py:114:4: R0201: Method could be a function (no-self-use)
datacrafter\cmds\project.py:123:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:123:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:125:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:125:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:129:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:129:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:131:22: W0613: Unused argument 'proceed' (unused-argument)
datacrafter\cmds\project.py:147:12: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
datacrafter\cmds\project.py:153:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:155:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:156:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\cmds\project.py:160:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:160:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:166:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\cmds\project.py:166:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:169:18: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\cmds\project.py:122:8: W0201: Attribute 'extractor' defined outside __init__ (attribute-defined-outside-init)
datacrafter\cmds\project.py:124:8: W0201: Attribute 'processor' defined outside __init__ (attribute-defined-outside-init)
datacrafter\cmds\project.py:126:8: W0201: Attribute 'destination' defined outside __init__ (attribute-defined-outside-init)
datacrafter\cmds\project.py:128:12: W0201: Attribute 'destination' defined outside __init__ (attribute-defined-outside-init)
datacrafter\cmds\project.py:175:12: W0201: Attribute 'state' defined outside __init__ (attribute-defined-outside-init)
datacrafter\cmds\project.py:4:0: W0611: Unused import json (unused-import)
datacrafter\cmds\project.py:7:4: W0611: Unused CDumper imported from yaml as Dumper (unused-import)
datacrafter\cmds\project.py:9:4: W0611: Unused Dumper imported from yaml (unused-import)
datacrafter\cmds\project.py:3:0: C0411: standard import "import logging" should be placed before "import yaml" (wrong-import-order)
datacrafter\cmds\project.py:4:0: C0411: standard import "import json" should be placed before "import yaml" (wrong-import-order)
datacrafter\cmds\project.py:5:0: C0411: standard import "import errno" should be placed before "import yaml" (wrong-import-order)
datacrafter\cmds\project.py:10:0: C0411: standard import "import os" should be placed before "import yaml" (wrong-import-order)
datacrafter\cmds\project.py:11:0: C0411: standard import "import glob" should be placed before "import yaml" (wrong-import-order)
************* Module datacrafter.common.collect
datacrafter\common\collect.py:11:0: C0301: Line too long (169/100) (line-too-long)
datacrafter\common\collect.py:12:0: C0301: Line too long (101/100) (line-too-long)
datacrafter\common\collect.py:46:0: C0301: Line too long (163/100) (line-too-long)
datacrafter\common\collect.py:77:0: C0301: Line too long (150/100) (line-too-long)
datacrafter\common\collect.py:114:0: C0304: Final newline missing (missing-final-newline)
datacrafter\common\collect.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\common\collect.py:16:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\collect.py:17:4: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:17:17: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:20:8: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\collect.py:29:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:29:30: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:35:12: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\collect.py:35:16: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:37:12: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\collect.py:37:16: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:38:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:38:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:20:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\common\collect.py:43:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\collect.py:46:0: R0913: Too many arguments (10/5) (too-many-arguments)
datacrafter\common\collect.py:46:0: R0914: Too many local variables (18/15) (too-many-locals)
datacrafter\common\collect.py:56:8: C0103: Variable name "u" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\collect.py:59:58: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:64:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\common\collect.py:70:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:70:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:72:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:72:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:46:24: W0613: Unused argument 'current_path' (unused-argument)
datacrafter\common\collect.py:46:38: W0613: Unused argument 'temp_path' (unused-argument)
datacrafter\common\collect.py:77:0: R0913: Too many arguments (10/5) (too-many-arguments)
datacrafter\common\collect.py:77:0: R0914: Too many local variables (20/15) (too-many-locals)
datacrafter\common\collect.py:86:8: C0103: Variable name "u" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\collect.py:101:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:101:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:102:8: C0103: Variable name "fd" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\collect.py:105:54: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:106:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:106:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:109:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:109:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:111:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:111:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:114:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\collect.py:114:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\collect.py:77:35: W0613: Unused argument 'temp_path' (unused-argument)
************* Module datacrafter.common.common
datacrafter\common\common.py:35:0: C0301: Line too long (103/100) (line-too-long)
datacrafter\common\common.py:40:0: C0301: Line too long (102/100) (line-too-long)
datacrafter\common\common.py:45:0: C0301: Line too long (106/100) (line-too-long)
datacrafter\common\common.py:70:0: C0301: Line too long (101/100) (line-too-long)
datacrafter\common\common.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\common\common.py:2:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\common.py:5:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\common\common.py:14:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\common\common.py:15:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\common\common.py:15:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:21:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:22:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\common\common.py:24:20: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\common.py:33:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:36:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:37:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\common\common.py:39:20: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\common.py:10:0: R0911: Too many return statements (10/6) (too-many-return-statements)
datacrafter\common\common.py:10:0: R0912: Too many branches (18/12) (too-many-branches)
datacrafter\common\common.py:48:0: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\common\common.py:52:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\common\common.py:53:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:57:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\common\common.py:57:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:62:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\common.py:69:12: W0120: Else clause on loop without a break statement, remove the else and de-indent all the code inside it (useless-else-on-loop)
datacrafter\common\common.py:64:16: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\common.py:76:11: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
************* Module datacrafter.common.converters
datacrafter\common\converters.py:26:35: C0303: Trailing whitespace (trailing-whitespace)
datacrafter\common\converters.py:38:0: W0311: Bad indentation. Found 14 spaces, expected 16 (bad-indentation)
datacrafter\common\converters.py:120:0: C0304: Final newline missing (missing-final-newline)
datacrafter\common\converters.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\common\converters.py:10:0: R0402: Use 'from lxml import etree' instead (consider-using-from-import)
datacrafter\common\converters.py:18:18: C0103: Argument name "t" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:18:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:20:4: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:23:8: C0103: Variable name "dd" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:24:12: C0103: Variable name "dc" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:26:19: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:30:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:44:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:44:0: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\common\converters.py:45:4: C0103: Constant name "n" doesn't conform to UPPER_CASE naming style (invalid-name)
datacrafter\common\converters.py:45:4: W0601: Global variable 'n' undefined at the module level (global-variable-undefined)
datacrafter\common\converters.py:47:22: W0622: Redefining built-in 'object' (redefined-builtin)
datacrafter\common\converters.py:48:8: C0103: Constant name "n" doesn't conform to UPPER_CASE naming style (invalid-name)
datacrafter\common\converters.py:48:8: W0601: Global variable 'n' undefined at the module level (global-variable-undefined)
datacrafter\common\converters.py:50:35: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\converters.py:50:35: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\converters.py:50:48: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\converters.py:44:37: W0613: Unused argument 'tagname' (unused-argument)
datacrafter\common\converters.py:44:51: W0613: Unused argument 'prefix_strip' (unused-argument)
datacrafter\common\converters.py:44:82: W0613: Unused argument 'encoding' (unused-argument)
datacrafter\common\converters.py:56:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:57:4: W0621: Redefining name 'n' from outer scope (line 46) (redefined-outer-name)
datacrafter\common\converters.py:56:0: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\common\converters.py:57:4: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:58:23: I1101: Module 'lxml.etree' has no 'iterparse' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)
datacrafter\common\converters.py:61:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:62:41: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\converters.py:62:41: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\converters.py:62:54: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\converters.py:68:25: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
datacrafter\common\converters.py:56:73: W0613: Unused argument 'encoding' (unused-argument)
datacrafter\common\converters.py:58:8: W0612: Unused variable 'event' (unused-variable)
datacrafter\common\converters.py:73:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:79:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:83:21: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
datacrafter\common\converters.py:85:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:88:14: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\common\converters.py:91:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:93:21: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
datacrafter\common\converters.py:95:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:97:4: W0621: Redefining name 'n' from outer scope (line 46) (redefined-outer-name)
datacrafter\common\converters.py:97:4: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:99:8: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:100:27: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\converters.py:101:14: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\common\converters.py:106:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\converters.py:108:21: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
datacrafter\common\converters.py:95:39: W0613: Unused argument 'start_page' (unused-argument)
datacrafter\common\converters.py:111:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\converters.py:114:14: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\common\converters.py:4:0: W0611: Unused import os (unused-import)
datacrafter\common\converters.py:7:0: W0611: Unused pprint imported from pprint (unused-import)
datacrafter\common\converters.py:12:0: W0611: Unused loads imported from bson.json_util (unused-import)
************* Module datacrafter.common.mappers
datacrafter\common\mappers.py:67:0: C0301: Line too long (121/100) (line-too-long)
datacrafter\common\mappers.py:85:0: C0301: Line too long (121/100) (line-too-long)
datacrafter\common\mappers.py:131:0: C0301: Line too long (149/100) (line-too-long)
datacrafter\common\mappers.py:149:0: C0301: Line too long (152/100) (line-too-long)
datacrafter\common\mappers.py:154:0: C0301: Line too long (165/100) (line-too-long)
datacrafter\common\mappers.py:163:0: C0301: Line too long (147/100) (line-too-long)
datacrafter\common\mappers.py:174:0: C0301: Line too long (136/100) (line-too-long)
datacrafter\common\mappers.py:188:0: C0304: Final newline missing (missing-final-newline)
datacrafter\common\mappers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\common\mappers.py:24:24: C0103: Argument name "qd" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:33:8: C0103: Variable name "k1" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:35:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\common\mappers.py:35:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\common\mappers.py:35:25: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
datacrafter\common\mappers.py:46:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:48:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:51:19: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:52:20: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:54:20: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:24:0: R0912: Too many branches (14/12) (too-many-branches)
datacrafter\common\mappers.py:66:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\common\mappers.py:66:29: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\mappers.py:75:15: W0703: Catching too general exception Exception (broad-except)
datacrafter\common\mappers.py:75:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:75:8: W0612: Unused variable 'e' (unused-variable)
datacrafter\common\mappers.py:84:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\common\mappers.py:84:29: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\mappers.py:93:15: W0703: Catching too general exception Exception (broad-except)
datacrafter\common\mappers.py:93:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:93:8: W0612: Unused variable 'e' (unused-variable)
datacrafter\common\mappers.py:101:25: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\mappers.py:104:11: W0703: Catching too general exception Exception (broad-except)
datacrafter\common\mappers.py:104:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:99:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
datacrafter\common\mappers.py:109:7: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:109:28: W1406: The u prefix for strings is no longer necessary in Python >=3.0 (redundant-u-string-prefix)
datacrafter\common\mappers.py:109:55: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\mappers.py:110:19: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\mappers.py:113:11: W0703: Catching too general exception Exception (broad-except)
datacrafter\common\mappers.py:113:4: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:107:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
datacrafter\common\mappers.py:119:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\common\mappers.py:129:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
datacrafter\common\mappers.py:129:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
datacrafter\common\mappers.py:129:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
datacrafter\common\mappers.py:129:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
datacrafter\common\mappers.py:131:4: C0103: Variable name "FUN_FIELDS" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\mappers.py:132:13: R1735: Consider using {} instead of dict() (use-dict-literal)
datacrafter\common\mappers.py:135:26: C0321: More than one statement on a single line (multiple-statements)
datacrafter\common\mappers.py:140:19: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:148:11: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:150:13: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:151:26: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\common\mappers.py:153:19: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
datacrafter\common\mappers.py:129:0: R0912: Too many branches (13/12) (too-many-branches)
datacrafter\common\mappers.py:165:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\mappers.py:172:0: W0102: Dangerous default value {} as argument (dangerous-default-value)
************* Module datacrafter.common.state
datacrafter\common\state.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\common\state.py:19:4: W0102: Dangerous default value {} as argument (dangerous-default-value)
datacrafter\common\state.py:28:8: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\state.py:33:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\common\state.py:28:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\common\state.py:35:4: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\common\state.py:39:12: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
datacrafter\common\state.py:39:16: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module datacrafter.destinations.base
datacrafter\destinations\base.py:9:0: C0301: Line too long (110/100) (line-too-long)
datacrafter\destinations\base.py:13:0: C0301: Line too long (104/100) (line-too-long)
datacrafter\destinations\base.py:59:0: C0301: Line too long (112/100) (line-too-long)
datacrafter\destinations\base.py:61:0: C0301: Line too long (109/100) (line-too-long)
datacrafter\destinations\base.py:83:0: C0301: Line too long (140/100) (line-too-long)
datacrafter\destinations\base.py:87:0: C0301: Line too long (126/100) (line-too-long)
datacrafter\destinations\base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\destinations\base.py:32:4: C0103: Method name "id" doesn't conform to snake_case naming style (invalid-name)
datacrafter\destinations\base.py:34:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\base.py:34:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\base.py:32:4: R0201: Method could be a function (no-self-use)
datacrafter\destinations\base.py:38:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\base.py:38:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\base.py:36:4: R0201: Method could be a function (no-self-use)
datacrafter\destinations\base.py:42:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\base.py:42:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\base.py:40:4: R0201: Method could be a function (no-self-use)
datacrafter\destinations\base.py:44:4: R0201: Method could be a function (no-self-use)
datacrafter\destinations\base.py:48:4: R0201: Method could be a function (no-self-use)
datacrafter\destinations\base.py:55:4: W0231: __init__ method from base class 'BaseDestination' is not called (super-init-not-called)
datacrafter\destinations\base.py:55:4: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\destinations\base.py:59:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\destinations\base.py:59:21: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\destinations\base.py:61:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\destinations\base.py:61:24: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
datacrafter\destinations\base.py:61:65: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\destinations\base.py:64:22: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
datacrafter\destinations\base.py:87:53: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\destinations\base.py:89:20: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\base.py:89:20: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\base.py:91:16: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\base.py:91:16: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\base.py:82:38: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\destinations\base.py:85:36: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\destinations\base.py:55:4: R0912: Too many branches (17/12) (too-many-branches)
datacrafter\destinations\base.py:16:4: W0611: Unused import lz4 (unused-import)
datacrafter\destinations\base.py:22:4: W0611: Unused import py7zr (unused-import)
************* Module datacrafter.destinations.bsonf
datacrafter\destinations\bsonf.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\destinations\bsonf.py:3:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\destinations\bsonf.py:5:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\destinations\bsonf.py:6:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\destinations\bsonf.py:11:4: W0237: Parameter 'rec' has been renamed to 'record' in overridden 'BSONDestination.write' method (arguments-renamed)
************* Module datacrafter.destinations.csv
datacrafter\destinations\csv.py:9:0: C0301: Line too long (107/100) (line-too-long)
datacrafter\destinations\csv.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\destinations\csv.py:3:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\destinations\csv.py:4:4: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\destinations\csv.py:5:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\destinations\csv.py:10:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\destinations\csv.py:18:4: W0237: Parameter 'rec' has been renamed to 'record' in overridden 'CSVDestination.write' method (arguments-renamed)
************* Module datacrafter.destinations.jsonl
datacrafter\destinations\jsonl.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\destinations\jsonl.py:4:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\destinations\jsonl.py:6:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\destinations\jsonl.py:7:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\destinations\jsonl.py:12:4: W0237: Parameter 'rec' has been renamed to 'record' in overridden 'JSONLinesDestination.write' method (arguments-renamed)
************* Module datacrafter.destinations.__init__
datacrafter\destinations\__init__.py:25:0: C0301: Line too long (133/100) (line-too-long)
datacrafter\destinations\__init__.py:31:0: C0301: Line too long (128/100) (line-too-long)
datacrafter\destinations\__init__.py:38:0: C0301: Line too long (121/100) (line-too-long)
datacrafter\destinations\__init__.py:39:0: C0301: Line too long (121/100) (line-too-long)
datacrafter\destinations\__init__.py:40:0: C0301: Line too long (108/100) (line-too-long)
datacrafter\destinations\__init__.py:44:0: C0305: Trailing newlines (trailing-newlines)
************* Module datacrafter.destinations
datacrafter\destinations\__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\destinations\__init__.py:15:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\destinations\__init__.py:19:12: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\__init__.py:19:12: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\__init__.py:20:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\destinations\__init__.py:42:12: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\destinations\__init__.py:42:12: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\destinations\__init__.py:15:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module datacrafter.extractors.base
datacrafter\extractors\base.py:8:0: C0301: Line too long (140/100) (line-too-long)
datacrafter\extractors\base.py:16:0: C0301: Line too long (111/100) (line-too-long)
datacrafter\extractors\base.py:23:0: C0301: Line too long (118/100) (line-too-long)
datacrafter\extractors\base.py:24:0: C0301: Line too long (119/100) (line-too-long)
datacrafter\extractors\base.py:30:0: C0301: Line too long (109/100) (line-too-long)
datacrafter\extractors\base.py:32:0: C0301: Line too long (109/100) (line-too-long)
datacrafter\extractors\base.py:35:0: C0301: Line too long (142/100) (line-too-long)
datacrafter\extractors\base.py:38:0: C0301: Line too long (126/100) (line-too-long)
datacrafter\extractors\base.py:54:0: C0301: Line too long (182/100) (line-too-long)
datacrafter\extractors\base.py:56:0: C0301: Line too long (113/100) (line-too-long)
datacrafter\extractors\base.py:66:0: C0301: Line too long (105/100) (line-too-long)
datacrafter\extractors\base.py:70:0: C0301: Line too long (118/100) (line-too-long)
datacrafter\extractors\base.py:81:0: C0305: Trailing newlines (trailing-newlines)
datacrafter\extractors\base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\extractors\base.py:10:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\extractors\base.py:11:4: W0238: Unused private member `DataCrafteronfigurationError.__init(self, message)` (unused-private-member)
datacrafter\extractors\base.py:12:8: W0201: Attribute 'message' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:15:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
datacrafter\extractors\base.py:47:62: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\extractors\base.py:50:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\extractors\base.py:50:29: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\extractors\base.py:53:16: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\extractors\base.py:53:29: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\extractors\base.py:44:8: W0201: Attribute 'results' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:56:16: W0201: Attribute 'results' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:70:20: W0201: Attribute 'results' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:77:12: W0201: Attribute 'results' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:74:12: W0201: Attribute 'script' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:76:12: W0201: Attribute '__process_func' defined outside __init__ (attribute-defined-outside-init)
datacrafter\extractors\base.py:1:0: W0611: Unused get_file_by_name imported from common.collect (unused-import)
datacrafter\extractors\base.py:2:0: C0411: third party import "from apibackuper.cmds.project import ProjectBuilder" should be placed before "from ..common.collect import get_file, get_file_by_name, get_file_by_pattern" (wrong-import-order)
datacrafter\extractors\base.py:3:0: C0411: standard import "import logging" should be placed before "from apibackuper.cmds.project import ProjectBuilder" (wrong-import-order)
datacrafter\extractors\base.py:4:0: C0411: standard import "import shutil" should be placed before "from apibackuper.cmds.project import ProjectBuilder" (wrong-import-order)
datacrafter\extractors\base.py:5:0: C0411: standard import "import os" should be placed before "from apibackuper.cmds.project import ProjectBuilder" (wrong-import-order)
datacrafter\extractors\base.py:6:0: C0411: standard import "from runpy import run_path" should be placed before "from apibackuper.cmds.project import ProjectBuilder" (wrong-import-order)
************* Module datacrafter.processors.base
datacrafter\processors\base.py:136:0: C0301: Line too long (128/100) (line-too-long)
datacrafter\processors\base.py:180:0: C0305: Trailing newlines (trailing-newlines)
datacrafter\processors\base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\processors\base.py:15:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\processors\base.py:15:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\processors\base.py:13:4: R0201: Method could be a function (no-self-use)
datacrafter\processors\base.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
datacrafter\processors\base.py:22:8: C0103: Attribute name "qd" doesn't conform to snake_case naming style (invalid-name)
datacrafter\processors\base.py:18:0: R0903: Too few public methods (1/2) (too-few-public-methods)
datacrafter\processors\base.py:30:0: R0903: Too few public methods (1/2) (too-few-public-methods)
datacrafter\processors\base.py:41:0: R0903: Too few public methods (1/2) (too-few-public-methods)
datacrafter\processors\base.py:52:0: R0903: Too few public methods (1/2) (too-few-public-methods)
datacrafter\processors\base.py:79:8: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\processors\base.py:81:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\processors\base.py:92:29: W0613: Unused argument 'record' (unused-argument)
datacrafter\processors\base.py:92:4: R0201: Method could be a function (no-self-use)
datacrafter\processors\base.py:96:18: W0613: Unused argument 'source' (unused-argument)
datacrafter\processors\base.py:96:26: W0613: Unused argument 'destination' (unused-argument)
datacrafter\processors\base.py:96:4: R0201: Method could be a function (no-self-use)
datacrafter\processors\base.py:110:4: W0231: __init__ method from base class 'BaseProcessor' is not called (super-init-not-called)
datacrafter\processors\base.py:128:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\processors\base.py:128:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\processors\base.py:133:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\processors\base.py:133:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\processors\base.py:137:12: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\processors\base.py:137:25: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\processors\base.py:141:8: C0206: Consider iterating with .items() (consider-using-dict-items)
datacrafter\processors\base.py:158:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\processors\base.py:162:20: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\processors\base.py:162:34: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\processors\base.py:163:16: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\processors\base.py:167:20: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\processors\base.py:175:20: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\processors\base.py:175:34: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\processors\base.py:178:8: W0612: Unused variable 'status' (unused-variable)
datacrafter\processors\base.py:3:0: C0411: standard import "from runpy import run_path" should be placed before "from ..common.mappers import map_keys, simple_typemap_object" (wrong-import-order)
datacrafter\processors\base.py:4:0: C0411: standard import "import logging" should be placed before "from ..common.mappers import map_keys, simple_typemap_object" (wrong-import-order)
************* Module datacrafter.sources.base
datacrafter\sources\base.py:72:0: C0305: Trailing newlines (trailing-newlines)
datacrafter\sources\base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\base.py:13:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\sources\base.py:13:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\sources\base.py:11:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\base.py:15:4: C0103: Method name "id" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\base.py:17:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\sources\base.py:17:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\sources\base.py:15:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\base.py:21:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\sources\base.py:21:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\sources\base.py:19:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\base.py:25:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\sources\base.py:25:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\sources\base.py:23:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\base.py:27:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\base.py:31:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\base.py:45:4: W0231: __init__ method from base class 'BaseSource' is not called (super-init-not-called)
datacrafter\sources\base.py:45:4: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\sources\base.py:57:32: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\sources\base.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\sources\base.py:69:11: E1101: Instance of 'BaseFileSource' has no 'sourcetype' member (no-member)
************* Module datacrafter.sources.bsonf
datacrafter\sources\bsonf.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\bsonf.py:4:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\bsonf.py:6:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\bsonf.py:8:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\bsonf.py:12:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\bsonf.py:19:4: W0221: Number of parameters was 2 in 'BaseSource.read' and is now 1 in overridden 'BSONSource.read' method (arguments-differ)
datacrafter\sources\bsonf.py:23:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\bsonf.py:26:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\bsonf.py:26:12: W0612: Unused variable 'n' (unused-variable)
************* Module datacrafter.sources.csv
datacrafter\sources\csv.py:4:0: C0301: Line too long (107/100) (line-too-long)
datacrafter\sources\csv.py:15:0: C0301: Line too long (121/100) (line-too-long)
datacrafter\sources\csv.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\csv.py:3:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\csv.py:4:4: R0913: Too many arguments (7/5) (too-many-arguments)
datacrafter\sources\csv.py:5:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\csv.py:10:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\csv.py:13:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\csv.py:36:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\csv.py:39:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\csv.py:39:12: W0612: Unused variable 'n' (unused-variable)
datacrafter\sources\csv.py:1:0: W0611: Unused reader imported from csv (unused-import)
************* Module datacrafter.sources.json
datacrafter\sources\json.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\json.py:4:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\json.py:6:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\json.py:13:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\json.py:27:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\json.py:30:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\json.py:30:12: W0612: Unused variable 'n' (unused-variable)
datacrafter\sources\json.py:1:0: W0611: Unused loads imported from json (unused-import)
datacrafter\sources\json.py:3:0: C0411: standard import "import json" should be placed before "from .base import BaseFileSource" (wrong-import-order)
************* Module datacrafter.sources.jsonl
datacrafter\sources\jsonl.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\jsonl.py:3:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\jsonl.py:5:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\jsonl.py:7:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\jsonl.py:22:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\jsonl.py:25:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\jsonl.py:25:12: W0612: Unused variable 'n' (unused-variable)
************* Module datacrafter.sources.xls
datacrafter\sources\xls.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\xls.py:5:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\xls.py:6:4: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\sources\xls.py:7:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\xls.py:13:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\xls.py:17:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\xls.py:28:4: W0221: Number of parameters was 2 in 'BaseSource.read' and is now 1 in overridden 'XLSSource.read' method (arguments-differ)
datacrafter\sources\xls.py:32:14: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\sources\xls.py:39:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\xls.py:42:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\xls.py:45:18: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\sources\xls.py:42:12: W0612: Unused variable 'n' (unused-variable)
************* Module datacrafter.sources.xlsx
datacrafter\sources\xlsx.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\xlsx.py:4:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\xlsx.py:5:4: R0913: Too many arguments (6/5) (too-many-arguments)
datacrafter\sources\xlsx.py:6:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\xlsx.py:12:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\xlsx.py:15:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\xlsx.py:28:4: W0221: Number of parameters was 2 in 'BaseSource.read' and is now 1 in overridden 'XLSXSource.read' method (arguments-differ)
datacrafter\sources\xlsx.py:31:14: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\sources\xlsx.py:38:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\xlsx.py:41:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\xlsx.py:43:18: R1734: Consider using [] instead of list() (use-list-literal)
datacrafter\sources\xlsx.py:41:12: W0612: Unused variable 'n' (unused-variable)
************* Module datacrafter.sources.xml
datacrafter\sources\xml.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\xml.py:4:0: R0402: Use 'from lxml import etree' instead (consider-using-from-import)
datacrafter\sources\xml.py:7:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\xml.py:9:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\xml.py:12:22: I1101: Module 'lxml.etree' has no 'iterparse' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)
datacrafter\sources\xml.py:14:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\xml.py:22:4: W0221: Number of parameters was 2 in 'BaseSource.read' and is now 1 in overridden 'XMLSource.read' method (arguments-differ)
datacrafter\sources\xml.py:26:12: W0612: Unused variable 'event' (unused-variable)
datacrafter\sources\xml.py:36:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\xml.py:39:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\xml.py:39:12: W0612: Unused variable 'n' (unused-variable)
datacrafter\sources\xml.py:1:0: W0611: Unused reader imported from csv (unused-import)
datacrafter\sources\xml.py:4:0: C0411: third party import "import lxml.etree as etree" should be placed before "from .base import BaseFileSource" (wrong-import-order)
************* Module datacrafter.sources.zipped
datacrafter\sources\zipped.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\zipped.py:6:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\zipped.py:8:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\zipped.py:16:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\zipped.py:9:21: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\sources\zipped.py:15:28: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\sources\zipped.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\sources\zipped.py:20:12: W0104: Statement seems to have no effect (pointless-statement)
datacrafter\sources\zipped.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\sources\zipped.py:28:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\sources\zipped.py:31:32: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\sources\zipped.py:37:4: W0221: Number of parameters was 2 in 'BaseSource.read' and is now 1 in overridden 'ZIPSourceWrapper.read' method (arguments-differ)
datacrafter\sources\zipped.py:42:8: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\zipped.py:43:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
datacrafter\sources\zipped.py:47:16: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
datacrafter\sources\zipped.py:42:8: W0612: Unused variable 'e' (unused-variable)
datacrafter\sources\zipped.py:53:28: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
datacrafter\sources\zipped.py:59:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\sources\zipped.py:59:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\sources\zipped.py:57:4: R0201: Method could be a function (no-self-use)
datacrafter\sources\zipped.py:61:4: W0222: Signature differs from overridden 'read_bulk' method (signature-differs)
datacrafter\sources\zipped.py:64:8: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\zipped.py:66:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
datacrafter\sources\zipped.py:2:0: W0611: Unused etree_to_dict imported from common.converters (unused-import)
datacrafter\sources\zipped.py:3:0: C0411: standard import "from zipfile import ZipFile" should be placed before "from .base import BaseSource" (wrong-import-order)
************* Module datacrafter.sources.zipxml
datacrafter\sources\zipxml.py:40:0: C0305: Trailing newlines (trailing-newlines)
datacrafter\sources\zipxml.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\zipxml.py:2:0: R0402: Use 'from lxml import etree' instead (consider-using-from-import)
datacrafter\sources\zipxml.py:6:0: C0115: Missing class docstring (missing-class-docstring)
datacrafter\sources\zipxml.py:8:8: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\zipxml.py:11:22: I1101: Module 'lxml.etree' has no 'iterparse' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)
datacrafter\sources\zipxml.py:12:8: W0107: Unnecessary pass statement (unnecessary-pass)
datacrafter\sources\zipxml.py:21:14: R1725: Consider using Python 3 style super() without arguments (super-with-arguments)
datacrafter\sources\zipxml.py:23:26: I1101: Module 'lxml.etree' has no 'iterparse' member, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects. (c-extension-no-member)
datacrafter\sources\zipxml.py:30:12: W0612: Unused variable 'event' (unused-variable)
datacrafter\sources\zipxml.py:2:0: C0411: third party import "import lxml.etree as etree" should be placed before "from ..common.converters import etree_to_dict" (wrong-import-order)
************* Module datacrafter.sources.__init__
datacrafter\sources\__init__.py:23:0: C0301: Line too long (138/100) (line-too-long)
datacrafter\sources\__init__.py:27:0: C0301: Line too long (138/100) (line-too-long)
datacrafter\sources\__init__.py:34:0: C0301: Line too long (101/100) (line-too-long)
datacrafter\sources\__init__.py:42:0: C0301: Line too long (141/100) (line-too-long)
datacrafter\sources\__init__.py:43:0: C0301: Line too long (113/100) (line-too-long)
datacrafter\sources\__init__.py:51:0: C0301: Line too long (129/100) (line-too-long)
datacrafter\sources\__init__.py:59:0: C0301: Line too long (130/100) (line-too-long)
datacrafter\sources\__init__.py:64:0: C0301: Line too long (134/100) (line-too-long)
************* Module datacrafter.sources
datacrafter\sources\__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
datacrafter\sources\__init__.py:13:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
datacrafter\sources\__init__.py:13:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\sources\__init__.py:26:0: C0116: Missing function or method docstring (missing-function-docstring)
datacrafter\sources\__init__.py:27:4: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:27:17: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:30:18: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
datacrafter\sources\__init__.py:32:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
datacrafter\sources\__init__.py:34:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:34:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:38:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:38:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:42:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:42:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:50:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:50:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:58:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:58:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:64:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:64:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:69:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:69:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:72:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
datacrafter\sources\__init__.py:72:22: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)
datacrafter\sources\__init__.py:75:8: E0711: NotImplemented raised - should raise NotImplementedError (notimplemented-raised)
datacrafter\sources\__init__.py:75:8: E0702: Raising NotImplementedType while only classes or instances are allowed (raising-bad-type)
datacrafter\sources\__init__.py:26:0: R0911: Too many return statements (8/6) (too-many-return-statements)
datacrafter\sources\__init__.py:26:0: R0912: Too many branches (15/12) (too-many-branches)
datacrafter\sources\__init__.py:1:0: R0801: Similar lines in 2 files
==datacrafter.sources.xml:[23:32]
==datacrafter.sources.zipxml:[27:36]
        row = None
        while not row:
            event, elem = next(self.reader)
            shorttag = elem.tag.rsplit('}', 1)[-1]
            if shorttag == self.tagname:
                if self.prefix_strip:
                    row = etree_to_dict(elem, self.prefix_strip)
                else:
                    row = etree_to_dict(elem) (duplicate-code)
datacrafter\sources\__init__.py:1:0: R0801: Similar lines in 2 files
==datacrafter.sources.json:[26:32]
==datacrafter.sources.xml:[35:41]
    def read_bulk(self, num):
        """Read bulk JSON records"""
        chunk = []
        for n in range(0, num):
            chunk.append(self.read())
        return chunk (duplicate-code)
datacrafter\sources\__init__.py:1:0: R0801: Similar lines in 2 files
==datacrafter.sources.csv:[32:39]
==datacrafter.sources.json:[23:30]
        self.pos += 1
        return row

    def read_bulk(self, num):
        """Read bulk CSV records"""
        chunk = []
        for n in range(0, num): (duplicate-code)
datacrafter\sources\__init__.py:1:0: R0801: Similar lines in 2 files
==datacrafter.destinations.base:[41:52]
==datacrafter.sources.base:[24:34]
        raise NotImplemented

    def is_flat(self):
        """Is destination flat. Default: False"""
        return False

    def is_streaming(self):
        """Is destination streaming. Default: False"""
        return False

 (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 4.67/10 (previous run: 4.67/10, +0.00)

